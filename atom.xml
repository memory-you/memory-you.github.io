<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zeroXP</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://memory-you.github.io/"/>
  <updated>2019-08-30T12:59:48.180Z</updated>
  <id>https://memory-you.github.io/</id>
  
  <author>
    <name>zero XP</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTTP常见的状态码</title>
    <link href="https://memory-you.github.io/2019/08/30/HTTP%E5%B8%B8%E8%A7%81%E7%9A%84%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    <id>https://memory-you.github.io/2019/08/30/HTTP常见的状态码/</id>
    <published>2019-08-30T12:14:27.000Z</published>
    <updated>2019-08-30T12:59:48.180Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
状态码的职责是当客户端向服务器发送请求时，描述返回的请求结果。借助状态码，用户可以知道服务端时正常处理了请求还是出现了错误。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常见六大Web安全按攻防解析</title>
    <link href="https://memory-you.github.io/2019/08/29/%E5%B8%B8%E8%A7%81%E5%85%AD%E5%A4%A7Web%E5%AE%89%E5%85%A8%E6%8C%89%E6%94%BB%E9%98%B2%E8%A7%A3%E6%9E%90/"/>
    <id>https://memory-you.github.io/2019/08/29/常见六大Web安全按攻防解析/</id>
    <published>2019-08-29T08:04:25.000Z</published>
    <updated>2019-08-30T12:13:37.043Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
在互联网时代，数据安全与个人隐私受到了前所未有的挑战，各种新奇的攻击技术层出不穷。如何才能更好地保护我们的数据？
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTPS工作原理</title>
    <link href="https://memory-you.github.io/2019/08/27/HTTPS%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>https://memory-you.github.io/2019/08/27/HTTPS工作原理/</id>
    <published>2019-08-27T15:05:49.000Z</published>
    <updated>2019-08-29T07:49:00.850Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;近几年，互联网发送着翻天覆地的变化，尤其是我们一直习以为常的HTTP协议，在逐渐的被HTTPS协议所取代，在浏览器、搜索引擎、CA机构、大型互联网企业的共同促进下，互联网迎来了“HTTPS加密时代”，HTTPS将在未来的几年内全面取代HTTP成为传输协议的主流。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>九种跨域方式实现原理</title>
    <link href="https://memory-you.github.io/2019/08/27/%E4%B9%9D%E7%A7%8D%E8%B7%A8%E5%9F%9F%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    <id>https://memory-you.github.io/2019/08/27/九种跨域方式实现原理/</id>
    <published>2019-08-27T08:10:33.000Z</published>
    <updated>2019-08-27T15:03:59.296Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前后端数据交互经常会碰到请求跨域，什么是跨域，以及有哪几种跨域方式，这是本文要探讨的内容。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浏览器渲染原理</title>
    <link href="https://memory-you.github.io/2019/08/21/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/"/>
    <id>https://memory-you.github.io/2019/08/21/浏览器渲染原理/</id>
    <published>2019-08-21T13:39:07.000Z</published>
    <updated>2019-08-21T16:07:11.602Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;浏览器的内核是指支持浏览器运行的最核心的程序，分为两个部分的，一是渲染引擎，二是JS引擎。渲染引擎在不同的浏览器中也不是都相同的。目前市面上常见的柳然其内核可以分为这四种：Trident（IE）、Gecko（Firefox)、Blink（Chrome、Opera）、Webkit（Safari）。这里面大家最耳熟能详的应该是Webkit内核了，Webkit内核时当下浏览器最好的内核。&lt;/p&gt;
&lt;p&gt;本文我就以Webkit为例，对现代浏览器的渲染过程进行一个深度的剖析。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>从URL输入到页面展现</title>
    <link href="https://memory-you.github.io/2019/08/19/%E4%BB%8EURL%E8%BE%93%E5%85%A5%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%B1%95%E7%8E%B0/"/>
    <id>https://memory-you.github.io/2019/08/19/从URL输入到页面展现/</id>
    <published>2019-08-19T15:03:22.000Z</published>
    <updated>2019-08-21T13:36:05.771Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在浏览器中输入URL到整个页面显示在用户面前时这个过程中到底发生了什么？经历怎样的一个过程？&lt;/p&gt;
&lt;p&gt;总体来说分为以下几个过程：&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何居中一个元素</title>
    <link href="https://memory-you.github.io/2019/08/18/%E5%A6%82%E4%BD%95%E5%B1%85%E4%B8%AD%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0/"/>
    <id>https://memory-you.github.io/2019/08/18/如何居中一个元素/</id>
    <published>2019-08-18T05:50:32.000Z</published>
    <updated>2019-08-18T07:48:49.235Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;水平居中&quot;&gt;&lt;a href=&quot;#水平居中&quot; class=&quot;headerlink&quot; title=&quot;水平居中&quot;&gt;&lt;/a&gt;水平居中&lt;/h2&gt;&lt;h3 id=&quot;行内元素水平居中&quot;&gt;&lt;a href=&quot;#行内元素水平居中&quot; class=&quot;headerlink&quot; title=&quot;行内元素水平居中&quot;&gt;&lt;/a&gt;行内元素水平居中&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;利用text-align:center可以实现在块级元素内部的行内元素水平居中。&lt;/strong&gt;此方法对inline、inline-block、inline-table和inline-flex元素水平居中都有效。 &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>懒加载和预加载</title>
    <link href="https://memory-you.github.io/2019/08/16/%E6%87%92%E5%8A%A0%E8%BD%BD%E5%92%8C%E9%A2%84%E5%8A%A0%E8%BD%BD/"/>
    <id>https://memory-you.github.io/2019/08/16/懒加载和预加载/</id>
    <published>2019-08-16T07:55:08.000Z</published>
    <updated>2019-08-16T15:00:51.692Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;懒加载&quot;&gt;&lt;a href=&quot;#懒加载&quot; class=&quot;headerlink&quot; title=&quot;懒加载&quot;&gt;&lt;/a&gt;懒加载&lt;/h2&gt;&lt;h3 id=&quot;什么是懒加载&quot;&gt;&lt;a href=&quot;#什么是懒加载&quot; class=&quot;headerlink&quot; title=&quot;什么是懒加载&quot;&gt;&lt;/a&gt;什么是懒加载&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;懒加载也叫延迟加载，指的是在长网页中延迟加载图像，是一种很好优化网页性能的方式。&lt;/strong&gt; 用户滚动到他们之前，可视区域外的图像不会加载。这与图像预加载相反，在长网页上使用延迟加载将使网页加载更快。在某些情况下，它还可以帮助减少服务器负载。常适用图片很多，页面很长的电商网站场景中。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://memory-you.github.io/2019/07/09/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://memory-you.github.io/2019/07/09/Markdown语法/</id>
    <published>2019-07-09T14:52:12.000Z</published>
    <updated>2019-07-09T14:52:12.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;p&gt;在想要设置为标题的文字面前加#来表示，&lt;br&gt;一个#是一级标题，两个#是二级标题以此类推。支持六级标题。&lt;/p&gt;
    
    </summary>
    
      <category term="Markdown" scheme="https://memory-you.github.io/categories/Markdown/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://memory-you.github.io/2019/06/15/hello-world/"/>
    <id>https://memory-you.github.io/2019/06/15/hello-world/</id>
    <published>2019-06-15T13:42:25.229Z</published>
    <updated>2019-08-16T15:01:02.192Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
