<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zeroXP</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://memory-you.github.io/"/>
  <updated>2019-11-23T12:28:03.225Z</updated>
  <id>https://memory-you.github.io/</id>
  
  <author>
    <name>zero XP</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>谈谈BFC</title>
    <link href="https://memory-you.github.io/2019/11/19/%E8%B0%88%E8%B0%88BFC/"/>
    <id>https://memory-you.github.io/2019/11/19/谈谈BFC/</id>
    <published>2019-11-19T15:32:09.000Z</published>
    <updated>2019-11-23T12:28:03.225Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
BFC（Block Formatting Context）是Web页面中盒模型布局的CSS渲染模式，在W3C文档中：

&lt;blockquote&gt;
&lt;p&gt; 浮动，绝对定位元素，&lt;code&gt;inline-blocks&lt;/code&gt;, &lt;code&gt;table-cells&lt;/code&gt;, &lt;code&gt;table-captions&lt;/code&gt;,和&lt;code&gt;overflow&lt;/code&gt;的值不为&lt;code&gt;visible&lt;/code&gt;的元素，（除了这个值已经被传到了视口的时候）将创建一个新的&lt;code&gt;块级格式化上下文&lt;/code&gt;。著作权归作者所有。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CSS" scheme="https://memory-you.github.io/categories/CSS/"/>
    
    
      <category term="布局" scheme="https://memory-you.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>CSS清除浮动</title>
    <link href="https://memory-you.github.io/2019/11/19/CSS%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/"/>
    <id>https://memory-you.github.io/2019/11/19/CSS清除浮动/</id>
    <published>2019-11-19T14:26:18.000Z</published>
    <updated>2019-11-23T12:28:09.301Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
在了解如何清除浮动之前，先介绍为什么需要清除浮动：

&lt;p&gt;浮动虽然便于页面布局，但是会同时产生一些问题，也就是我们常说的副作用。当一个元素设置了浮动后，常见的缺陷有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;影响它的兄弟元素的位置。&lt;/li&gt;
&lt;li&gt;它的父元素会产生高度塌陷。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="CSS" scheme="https://memory-you.github.io/categories/CSS/"/>
    
    
      <category term="布局" scheme="https://memory-you.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>CSS定位详解</title>
    <link href="https://memory-you.github.io/2019/11/19/CSS%E5%AE%9A%E4%BD%8D%E8%AF%A6%E8%A7%A3/"/>
    <id>https://memory-you.github.io/2019/11/19/CSS定位详解/</id>
    <published>2019-11-19T12:12:19.000Z</published>
    <updated>2019-11-23T12:27:49.556Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
CSS 有两个重要的基本属性，前端开发必须掌握：`display` 和 `position`。
    
    </summary>
    
      <category term="CSS" scheme="https://memory-you.github.io/categories/CSS/"/>
    
    
      <category term="布局" scheme="https://memory-you.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之拖放</title>
    <link href="https://memory-you.github.io/2019/11/19/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8B%E6%8B%96%E6%94%BE/"/>
    <id>https://memory-you.github.io/2019/11/19/HTML5新特性之拖放/</id>
    <published>2019-11-19T11:30:17.000Z</published>
    <updated>2019-11-19T12:50:42.785Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
拖拉（drag）指的是，用户在某个对象上按下鼠标键不放，拖动它到另一个位置，然后释放鼠标键，将该对象放在那里。

&lt;p&gt;拖放的对象有好几种，包括元素节点、图片、链接、选中的文字等等。在网页中，除了元素节点默认不可以拖放，其他（图片、链接、选中的文字）都是可以直接拖拉的。为了让元素节点可拖拉，可以将该节点的&lt;code&gt;draggable&lt;/code&gt;属性设为&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之SSE</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BSSE/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之SSE/</id>
    <published>2019-11-18T14:13:10.000Z</published>
    <updated>2019-11-19T12:51:10.021Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
服务器向浏览器推送信息，除了WebSocket，还有一种方法：Server-Sent Events。本文介绍它的用法：

&lt;p&gt;&lt;img src=&quot;http://www.ruanyifeng.com/blogimg/asset/2017/bg2017052701.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之WebWorker</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BWebWorker/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之WebWorker/</id>
    <published>2019-11-18T13:56:42.000Z</published>
    <updated>2019-11-19T12:51:13.914Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
当在 HTML 页面中执行脚本时，页面的状态是不可响应的，直到脚本已完成。

&lt;p&gt;web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。&lt;/p&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之WebSocket</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BWebSocket/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之WebSocket/</id>
    <published>2019-11-18T13:14:33.000Z</published>
    <updated>2019-11-19T12:51:16.883Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
作为新一代的web标准，HTML5为我们提供了很多有用的东西，比如canvas，本地存储（已经分离出去了），多媒体编程接口，当然还有我们的WebSocket。WebSocket是HTML5开始提供的一种浏览器与服务器间进行全双工通讯（full-duplex）的网络技术，可以传输基于信息的文本和二进制的数据。它于2011年被IETF定为标准 RFC 6455，同时WebSocket API也被W3C定为标准。
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之应用程序缓存</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8B%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%BC%93%E5%AD%98/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之应用程序缓存/</id>
    <published>2019-11-18T12:36:59.000Z</published>
    <updated>2019-11-19T12:51:19.663Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
HTML5 引入了应用程序缓存，这意味着 web 应用可进行缓存， 并可在没有因特网连接时进行访问。

&lt;p&gt;应用程序缓存为应用带来三个优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;离线浏览 - 用户可以在应用离线时使用它们。&lt;/li&gt;
&lt;li&gt;速度 - 已缓存资源加载得更快。&lt;/li&gt;
&lt;li&gt;减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之WebStorage</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BWebStorage/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之WebStorage/</id>
    <published>2019-11-18T12:16:53.000Z</published>
    <updated>2019-11-19T12:53:24.987Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
在HTML4中可以使用Cookie，在客户端保存诸如用户名等简单的用户消息，但是通过长期的使用，人们发现使用Cookie存储数据存在以下几个问题：

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;大小： Cookie的大小被限制在4kb。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;带宽：Cookie是随着HTTP请求中带过去，每次请求都会带着Cookie，这样会浪费资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复杂性：要正确操作Cookie是很苦难的。&lt;/p&gt;
&lt;p&gt;针对这些问题，在HTML5中重新提供了一种在客户端本地保存数据的功能，它就是Web Storage功能。Web Storage功能，顾名思义，就是在Web上存储数据的功能。这里的存储是针对客户端本地而言的。 Web Storage与Cookie相同在数据都是以键值对的存储，而不同在：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web Storage可以存储更大容量的数据（一般为5MB）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web Storage仅在客户端（即浏览器）中保存，不参与和服务器的通信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web Storage 拥有 setItem()、getItem()、removeItem()、clear()等方法，不像Cookie，需要前端开发者自己封装setCookie、getCookie。 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之地理位置</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8B%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之地理位置/</id>
    <published>2019-11-18T11:47:08.000Z</published>
    <updated>2019-11-19T12:51:29.104Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
地理位置（Geolocation）是 HTML5 的重要特性之一，提供了确定用户位置的功能，借助这个特性能够开发基于位置信息的应用。

&lt;ol&gt;
&lt;li&gt;检测浏览器是否支持&lt;/li&gt;
&lt;/o
        
      
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之Canvas与SVG</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BCanvas%E4%B8%8ESVG/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之Canvas与SVG/</id>
    <published>2019-11-18T11:27:22.000Z</published>
    <updated>2019-11-19T12:51:45.895Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
## Canvas

&lt;p&gt;HTML5&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;元素用于图形的绘制，通过脚本来完成。&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;标签只是
        
      
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性之视频与音频</title>
    <link href="https://memory-you.github.io/2019/11/18/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8B%E8%A7%86%E9%A2%91%E4%B8%8E%E9%9F%B3%E9%A2%91/"/>
    <id>https://memory-you.github.io/2019/11/18/HTML5新特性之视频与音频/</id>
    <published>2019-11-18T10:42:32.000Z</published>
    <updated>2019-11-19T12:51:58.366Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
HTML5提供了一个新标签`&lt;video&gt;`，用于播放视频。该标签默认是一个300*150的inline-block。使用方法如下：

&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;x.mp4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;video&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;video&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;x.mp4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;x.ogg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;x.webm&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;video&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5表单新特性</title>
    <link href="https://memory-you.github.io/2019/11/17/HTML5%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8B%E8%A1%A8%E5%8D%95/"/>
    <id>https://memory-you.github.io/2019/11/17/HTML5新特性之表单/</id>
    <published>2019-11-17T12:42:40.000Z</published>
    <updated>2019-11-19T12:51:34.742Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
HTML5给表单带来了许多新特性，总结为：

&lt;ol&gt;
&lt;li&gt;新的input type&lt;/li&gt;
&lt;li&gt;新的表单标签&lt;/li&gt;
&lt;li&gt;表单标签新的属性&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>HTML标签列表</title>
    <link href="https://memory-you.github.io/2019/11/17/HTML%E6%A0%87%E7%AD%BE%E5%88%97%E8%A1%A8/"/>
    <id>https://memory-you.github.io/2019/11/17/HTML标签列表/</id>
    <published>2019-11-17T10:22:09.000Z</published>
    <updated>2019-11-17T12:46:52.209Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
这里列出的所有标准化的HTML5元素，使用起始标签描述，按照功能分组。这些都是有效的HTML5元素，新网站应当只使用这里列出的元素。
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="标签" scheme="https://memory-you.github.io/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新特性</title>
    <link href="https://memory-you.github.io/2019/11/16/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>https://memory-you.github.io/2019/11/16/HTML5新特性/</id>
    <published>2019-11-16T13:51:12.000Z</published>
    <updated>2019-11-19T12:50:34.053Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
HTML5作为HTML的代替者，成为了新的标准，而且时至今日，在前端开发中，已经被大家广泛应用，但是对于HTML5有哪些具体的功能和特性，就有不少人不太清楚。下面是我总结的一些HTML5新特性。
    
    </summary>
    
      <category term="HTML" scheme="https://memory-you.github.io/categories/HTML/"/>
    
    
      <category term="HTML5新特性" scheme="https://memory-you.github.io/tags/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>谈谈CSS的选择器</title>
    <link href="https://memory-you.github.io/2019/11/10/%E8%B0%88%E8%B0%88CSS%E7%9A%84%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://memory-you.github.io/2019/11/10/谈谈CSS的选择器/</id>
    <published>2019-11-10T11:53:27.000Z</published>
    <updated>2019-11-19T12:58:46.576Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
CSS选择器有哪些类型？
    
    </summary>
    
      <category term="CSS" scheme="https://memory-you.github.io/categories/CSS/"/>
    
    
      <category term="选择器" scheme="https://memory-you.github.io/tags/%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>谈谈CSS的伪类与伪元素</title>
    <link href="https://memory-you.github.io/2019/11/10/%E8%B0%88%E8%B0%88CSS%E7%9A%84%E4%BC%AA%E7%B1%BB%E4%B8%8E%E4%BC%AA%E5%85%83%E7%B4%A0/"/>
    <id>https://memory-you.github.io/2019/11/10/谈谈CSS的伪类与伪元素/</id>
    <published>2019-11-10T10:18:55.000Z</published>
    <updated>2019-11-19T12:52:23.975Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
CSS中伪类与伪元素的概念是很容易混淆的，今天就来谈谈伪类与伪元素之间的区别。
    
    </summary>
    
      <category term="CSS" scheme="https://memory-you.github.io/categories/CSS/"/>
    
    
      <category term="选择器" scheme="https://memory-you.github.io/tags/%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
      <category term="伪类" scheme="https://memory-you.github.io/tags/%E4%BC%AA%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>fetch如何请求数据</title>
    <link href="https://memory-you.github.io/2019/11/10/fetch%E5%A6%82%E4%BD%95%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE/"/>
    <id>https://memory-you.github.io/2019/11/10/fetch如何请求数据/</id>
    <published>2019-11-10T07:47:10.000Z</published>
    <updated>2019-11-19T13:07:26.147Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
在传统Ajax时代，进行API等网络请求都是通过XMLHttpRequest或者封装后的框架进行网络请求，然而配置和调用方式非常混乱， 对于刚入门的新手并不友好。今天我们介绍的Fetch提供了一个更好的替代方法，它不仅提供了一种简单，合乎逻辑的方式来跨网络异步获取资源，而且可以很容易地被其他技术使用，例如 Service Workers。
    
    </summary>
    
      <category term="HTTP" scheme="https://memory-you.github.io/categories/HTTP/"/>
    
    
  </entry>
  
  <entry>
    <title>Ajax原理</title>
    <link href="https://memory-you.github.io/2019/11/10/Ajax%E5%8E%9F%E7%90%86/"/>
    <id>https://memory-you.github.io/2019/11/10/Ajax原理/</id>
    <published>2019-11-10T07:45:31.000Z</published>
    <updated>2019-11-19T13:09:48.639Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
Ajax是一种异步请求数据的Web开发技术，对于改善用户的体验和页面性能很有帮助。简单的说，在不需要重新刷新页面的情况下，Ajax通过异步请求加载后台数据，并在网页上呈现出来。常见运用场景有表单验证是否登入成功、百度搜索下拉框提示和快递单号查询等等。Ajax的目的是提高用户体验，较少网络数据的传输量。同时，由于Ajax请求获取的是数据而不是HTML文档，因此它也节省了网络带宽，让互联网用户的网络冲浪体验变得更加顺畅。
    
    </summary>
    
      <category term="HTTP" scheme="https://memory-you.github.io/categories/HTTP/"/>
    
    
  </entry>
  
  <entry>
    <title>浏览器的缓存机制</title>
    <link href="https://memory-you.github.io/2019/11/10/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/"/>
    <id>https://memory-you.github.io/2019/11/10/浏览器的缓存机制/</id>
    <published>2019-11-09T16:28:53.000Z</published>
    <updated>2019-11-19T12:57:01.931Z</updated>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
缓存可以说是性能优化中简单高效的一种优化方式了，一个优秀的缓存策略可以缩短网页请求资源的距离，减少延迟，并且由于缓存文件可以重复利用，还可以减少带宽，降低网络负荷。

&lt;p&gt;对于一个数据请求来说，可以分为发起网络请求、后端处理、浏览器响应三个步骤。浏览器缓存可以帮助我们在第一和第三步骤中优化性能。比如说直接使用缓存而不发起请求，或者发起了请求但后端存储的数据和前端一致，那么就没有必要再将数据回传回来，这样就减少了响应数据。&lt;/p&gt;
    
    </summary>
    
      <category term="浏览器" scheme="https://memory-you.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    
      <category term="缓存" scheme="https://memory-you.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
</feed>
